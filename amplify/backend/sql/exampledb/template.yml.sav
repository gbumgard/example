AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Template

Parameters:

  DBUserName:
    Type: String
    Description: An admin user name, e.g. admin. Stored in a SecretManager secret.

  DBClusterName:
    Type: String
    Description: The root name for the DB cluster. Combined with the 'env' parameter value to form the cluster ID.

  env:
    Type: String
    Description: The environment name. e.g. dev, test, or prod.
    Default: NONE

Mappings:
  Constants:
    ResourceLambdaFunction:
      Name: 'rdsSqlDocumentLoader'

Conditions:
  HasEnvironmentParameter: !Not 
    - !Equals 
      - !Ref env
      - NONE

Resources:
  RdsSqlResource:
    Type: Custom::RdsSqlResource
    DependsOn: LambdaExecutionPolicy
    Properties:
      Region: !Ref "AWS::Region"
      ServiceToken: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':lambda:'
          - !Ref 'AWS::Region'
          - ':'
          - !Ref 'AWS::AccountId'
          - ':function:'
          - !If
            - HasEnvironmentParameter
            - !Join 
              - ''
              - - !FindInMap [Constants, ResourceLambdaFunction, Name]
                - '-'
                - !Ref env
            - !FindInMap [Constants, ResourceLambdaFunction, Name]
      ClusterArn: !Join 
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':rds:'
          - !Ref 'AWS::Region'
          - ':'
          - !Ref 'AWS::AccountId'
          - ':cluster:'
          - !If
            - HasEnvironmentParameter
            - !Join 
              - ''
              - - !Ref DBClusterName
                - '-'
                - !Ref env
            - !Ref DBClusterName
      SecretArn: !Join 
        - ''
        - - 'rds-db-credentials/'
          - !Join 
            - ''
            - - !Ref DBClusterName
              - '-'
              - !Ref env
          - '/'
          - !Ref DBUserName

      CreateSqlDocument: |
        Select UUID();

      UpdateSqlDocument: |
        Select UUID();

      DeleteSqlDocument: |
        Select UUID();
  
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !If 
        - HasEnvironmentParameter
        - !Join 
          - ''
          - - 'sqlexampledbLambdaRole'
            - '-'
            - !Ref env
        - 'sqlexampledbLambdaRole'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
  LambdaExecutionPolicy:
    DependsOn:
      - LambdaExecutionRole
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: sqlexampledb-lambda-execution-policy
      Roles:
        - !Ref LambdaExecutionRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource: !Join 
              - ''
              - - 'arn:'
                - !Ref 'AWS::Partition'
                - ':logs:'
                - !Ref 'AWS::Region'
                - ':'
                - !Ref 'AWS::AccountId'
                - ':log-group:/aws/lambda/'
                - !If
                  - HasEnvironmentParameter
                  - !Join 
                    - ''
                    - - !FindInMap [Constants, ResourceLambdaFunction, Name]
                      - '-'
                      - !Ref env
                  - !FindInMap [Constants, ResourceLambdaFunction, Name]
                - ':log-streams:*'
    
Outputs:
  Region:
    Value: !Ref "AWS::Region"
  LambdaExecutionRole:
    Value: !Ref LambdaExecutionRole
